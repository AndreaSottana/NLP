andrea@:~$ nlp 
andrea@:~/PycharmProjects/NLP_project$ cd .. 
andrea@:~/PycharmProjects$ cd ai_core/NLP 
andrea@:~/PycharmProjects/ai_core/NLP$ ls 
1_WordRepresentations 4_TransformerAndBert  requirements.txt 
2_Seq2Seq             LICENSE.md 
3_Attention           README.md 
andrea@:~/PycharmProjects/ai_core/NLP$ python3 
Python 3.7.4 (default, Oct 12 2019, 18:55:45)  
[Clang 10.0.0 (clang-1000.11.45.5)] on darwin 
Type "help", "copyright", "credits" or "license" for more information. 
>>> import torch 
>>> max_seq_len=10 
>>> d_model=20 
>>> pe=torch.zeros(max_seq_len, d_model) 
>>> pe 
tensor([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], 
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], 
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], 
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], 
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], 
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], 
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], 
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], 
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], 
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]]) 
>>> pos = torch.arange(0, max_seq_len) 
>>> pos 
tensor([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]) 
>>> pos = pos.unsqueeze(0) 
>>> pos 
tensor([[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]]) 
>>> two_i=torch.arange(0, d_model, step=2).float() 
>>> two_i 
tensor([ 0.,  2.,  4.,  6.,  8., 10., 12., 14., 16., 18.]) 
>>> div_term = torch.pow(10000, (two_i/d_model)) 
>>> div_term 
tensor([1.0000e+00, 2.5119e+00, 6.3096e+00, 1.5849e+01, 3.9811e+01, 1.0000e+02, 
        2.5119e+02, 6.3096e+02, 1.5849e+03, 3.9811e+03]) 
>>> pe[:,0::2] = torch.sin(pos/div_term) 
>>> pe 
tensor([[0.0000, 0.0000, 0.3877, 0.0000, 0.3117, 0.0000, 0.1882, 0.0000, 0.1003, 
         0.0000, 0.0500, 0.0000, 0.0239, 0.0000, 0.0111, 0.0000, 0.0050, 0.0000, 
         0.0023, 0.0000], 
        [0.0000, 0.0000, 0.3877, 0.0000, 0.3117, 0.0000, 0.1882, 0.0000, 0.1003, 
         0.0000, 0.0500, 0.0000, 0.0239, 0.0000, 0.0111, 0.0000, 0.0050, 0.0000, 
         0.0023, 0.0000], 
        [0.0000, 0.0000, 0.3877, 0.0000, 0.3117, 0.0000, 0.1882, 0.0000, 0.1003, 
         0.0000, 0.0500, 0.0000, 0.0239, 0.0000, 0.0111, 0.0000, 0.0050, 0.0000, 
         0.0023, 0.0000], 
        [0.0000, 0.0000, 0.3877, 0.0000, 0.3117, 0.0000, 0.1882, 0.0000, 0.1003, 
         0.0000, 0.0500, 0.0000, 0.0239, 0.0000, 0.0111, 0.0000, 0.0050, 0.0000, 
         0.0023, 0.0000], 
        [0.0000, 0.0000, 0.3877, 0.0000, 0.3117, 0.0000, 0.1882, 0.0000, 0.1003, 
         0.0000, 0.0500, 0.0000, 0.0239, 0.0000, 0.0111, 0.0000, 0.0050, 0.0000, 
         0.0023, 0.0000], 
        [0.0000, 0.0000, 0.3877, 0.0000, 0.3117, 0.0000, 0.1882, 0.0000, 0.1003, 
         0.0000, 0.0500, 0.0000, 0.0239, 0.0000, 0.0111, 0.0000, 0.0050, 0.0000, 
         0.0023, 0.0000], 
        [0.0000, 0.0000, 0.3877, 0.0000, 0.3117, 0.0000, 0.1882, 0.0000, 0.1003, 
         0.0000, 0.0500, 0.0000, 0.0239, 0.0000, 0.0111, 0.0000, 0.0050, 0.0000, 
         0.0023, 0.0000], 
        [0.0000, 0.0000, 0.3877, 0.0000, 0.3117, 0.0000, 0.1882, 0.0000, 0.1003, 
         0.0000, 0.0500, 0.0000, 0.0239, 0.0000, 0.0111, 0.0000, 0.0050, 0.0000, 
         0.0023, 0.0000], 
        [0.0000, 0.0000, 0.3877, 0.0000, 0.3117, 0.0000, 0.1882, 0.0000, 0.1003, 
         0.0000, 0.0500, 0.0000, 0.0239, 0.0000, 0.0111, 0.0000, 0.0050, 0.0000, 
         0.0023, 0.0000], 
        [0.0000, 0.0000, 0.3877, 0.0000, 0.3117, 0.0000, 0.1882, 0.0000, 0.1003, 
         0.0000, 0.0500, 0.0000, 0.0239, 0.0000, 0.0111, 0.0000, 0.0050, 0.0000, 
         0.0023, 0.0000]]) 
>>> # even indices take value from sine, odd indices from cosine 
...  
>>> x = pe[:,5] 
>>> x 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]) 
>>> x = pe[:,:5] 
>>> x 
tensor([[0.0000, 0.0000, 0.3877, 0.0000, 0.3117], 
        [0.0000, 0.0000, 0.3877, 0.0000, 0.3117], 
        [0.0000, 0.0000, 0.3877, 0.0000, 0.3117], 
        [0.0000, 0.0000, 0.3877, 0.0000, 0.3117], 
        [0.0000, 0.0000, 0.3877, 0.0000, 0.3117], 
        [0.0000, 0.0000, 0.3877, 0.0000, 0.3117], 
        [0.0000, 0.0000, 0.3877, 0.0000, 0.3117], 
        [0.0000, 0.0000, 0.3877, 0.0000, 0.3117], 
        [0.0000, 0.0000, 0.3877, 0.0000, 0.3117], 
        [0.0000, 0.0000, 0.3877, 0.0000, 0.3117]]) 
>>> # this brings us to the end of the Encoder 

